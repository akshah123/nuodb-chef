broker = <%= node[:nuodb]['is_broker'] %>
domain = <%= node[:nuodb]['domain_name'] %>
domainPassword = <%= node[:nuodb]['domain_password'] %>
port = <%= node[:nuodb]['port'] %>
<% 
  peer = ""
  node[:nuodb][:brokers].each do |host| 
    if host != node['fqdn'] and host != node['hostname'] and host != node[:nuodb][:altAddr] and peer.length() == 0
      peer = host
    end
  end
  if peer.length() > 0
-%>
peer = <%= peer %>
<% end -%> 
<% if node[:nuodb][:altAddr].length() > 0 -%>
advertiseAlt = true
altAddr = <%= node[:nuodb][:altAddr] %>
<% end -%>
region = <%= node[:nuodb][:region] %>
log = <%= node[:nuodb][:loglevel] %>
portRange = <%= node[:nuodb]['portRange'] %>
enableAutomation = <%= node[:nuodb]['enableAutomation'] %>
enableAutomationBootstrap = <%= node[:nuodb]['enableAutomationBootstrap'] %>
automationTemplate = <%= node[:nuodb]['automationTemplate'] %>
balancer = <%= node[:nuodb]['balancer'] %>


# A flag specifying whether host level statistics should be collected using
# sigar. The default is inferred from the property "enableAutomation"
#enableHostStats =

# When "enableAutomation" is set, prune metrics by age. Default is 4 hours: 4h
# Supported Units are d=day, h=hour, m=minute.
#metricsPurgeAge =

# When "enableAutomation" is set, prune events by age. Default is 7 days: 7d
#eventsPurgeAge =

# The interval (in seconds) that brokers should wait between sending out UDP
# broadcast messages for local discovery, and that agents should wait to hear
# those messages on startup. By default broadcast is turned off so peering
# is done using the 'peer' property.
# broadcast = 1

# A flag specifying whether nuodb instances can only be started through this
# agent (as opposed to directly starting a nuodb process on the system). If this
# flag is true then a "connection key" is required of all nuodb instances. A
# connection key is only available if the process was started through a request
# on the agent. This is a good best-practice flag for locking down a system.
#requireConnectKey = false

